#include "live.h"

namespace {
#define DIM 23
#define EDIM 22
#define MEDIM 22
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_3 = 3.8414588206941227;
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_19 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with sympy 1.7.1                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2171810797954634884) {
   out_2171810797954634884[0] = 0;
   out_2171810797954634884[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2171810797954634884[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2171810797954634884[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2171810797954634884[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2171810797954634884[5] = -sin(in_vec[1]);
   out_2171810797954634884[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2171810797954634884[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2171810797954634884[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2171810797954634884[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2171810797954634884[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2171810797954634884[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2171810797954634884[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2171810797954634884[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2171810797954634884[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2171810797954634884[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2171810797954634884[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2171810797954634884[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8542546535441190970) {
   out_8542546535441190970[0] = delta_x[0] + nom_x[0];
   out_8542546535441190970[1] = delta_x[1] + nom_x[1];
   out_8542546535441190970[2] = delta_x[2] + nom_x[2];
   out_8542546535441190970[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8542546535441190970[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8542546535441190970[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8542546535441190970[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8542546535441190970[7] = delta_x[6] + nom_x[7];
   out_8542546535441190970[8] = delta_x[7] + nom_x[8];
   out_8542546535441190970[9] = delta_x[8] + nom_x[9];
   out_8542546535441190970[10] = delta_x[9] + nom_x[10];
   out_8542546535441190970[11] = delta_x[10] + nom_x[11];
   out_8542546535441190970[12] = delta_x[11] + nom_x[12];
   out_8542546535441190970[13] = delta_x[12] + nom_x[13];
   out_8542546535441190970[14] = delta_x[13] + nom_x[14];
   out_8542546535441190970[15] = delta_x[14] + nom_x[15];
   out_8542546535441190970[16] = delta_x[15] + nom_x[16];
   out_8542546535441190970[17] = delta_x[16] + nom_x[17];
   out_8542546535441190970[18] = delta_x[17] + nom_x[18];
   out_8542546535441190970[19] = delta_x[18] + nom_x[19];
   out_8542546535441190970[20] = delta_x[19] + nom_x[20];
   out_8542546535441190970[21] = delta_x[20] + nom_x[21];
   out_8542546535441190970[22] = delta_x[21] + nom_x[22];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8399843449917516150) {
   out_8399843449917516150[0] = -nom_x[0] + true_x[0];
   out_8399843449917516150[1] = -nom_x[1] + true_x[1];
   out_8399843449917516150[2] = -nom_x[2] + true_x[2];
   out_8399843449917516150[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8399843449917516150[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8399843449917516150[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8399843449917516150[6] = -nom_x[7] + true_x[7];
   out_8399843449917516150[7] = -nom_x[8] + true_x[8];
   out_8399843449917516150[8] = -nom_x[9] + true_x[9];
   out_8399843449917516150[9] = -nom_x[10] + true_x[10];
   out_8399843449917516150[10] = -nom_x[11] + true_x[11];
   out_8399843449917516150[11] = -nom_x[12] + true_x[12];
   out_8399843449917516150[12] = -nom_x[13] + true_x[13];
   out_8399843449917516150[13] = -nom_x[14] + true_x[14];
   out_8399843449917516150[14] = -nom_x[15] + true_x[15];
   out_8399843449917516150[15] = -nom_x[16] + true_x[16];
   out_8399843449917516150[16] = -nom_x[17] + true_x[17];
   out_8399843449917516150[17] = -nom_x[18] + true_x[18];
   out_8399843449917516150[18] = -nom_x[19] + true_x[19];
   out_8399843449917516150[19] = -nom_x[20] + true_x[20];
   out_8399843449917516150[20] = -nom_x[21] + true_x[21];
   out_8399843449917516150[21] = -nom_x[22] + true_x[22];
}
void H_mod_fun(double *state, double *out_8891062055483122034) {
   out_8891062055483122034[0] = 1.0;
   out_8891062055483122034[1] = 0.0;
   out_8891062055483122034[2] = 0.0;
   out_8891062055483122034[3] = 0.0;
   out_8891062055483122034[4] = 0.0;
   out_8891062055483122034[5] = 0.0;
   out_8891062055483122034[6] = 0.0;
   out_8891062055483122034[7] = 0.0;
   out_8891062055483122034[8] = 0.0;
   out_8891062055483122034[9] = 0.0;
   out_8891062055483122034[10] = 0.0;
   out_8891062055483122034[11] = 0.0;
   out_8891062055483122034[12] = 0.0;
   out_8891062055483122034[13] = 0.0;
   out_8891062055483122034[14] = 0.0;
   out_8891062055483122034[15] = 0.0;
   out_8891062055483122034[16] = 0.0;
   out_8891062055483122034[17] = 0.0;
   out_8891062055483122034[18] = 0.0;
   out_8891062055483122034[19] = 0.0;
   out_8891062055483122034[20] = 0.0;
   out_8891062055483122034[21] = 0.0;
   out_8891062055483122034[22] = 0.0;
   out_8891062055483122034[23] = 1.0;
   out_8891062055483122034[24] = 0.0;
   out_8891062055483122034[25] = 0.0;
   out_8891062055483122034[26] = 0.0;
   out_8891062055483122034[27] = 0.0;
   out_8891062055483122034[28] = 0.0;
   out_8891062055483122034[29] = 0.0;
   out_8891062055483122034[30] = 0.0;
   out_8891062055483122034[31] = 0.0;
   out_8891062055483122034[32] = 0.0;
   out_8891062055483122034[33] = 0.0;
   out_8891062055483122034[34] = 0.0;
   out_8891062055483122034[35] = 0.0;
   out_8891062055483122034[36] = 0.0;
   out_8891062055483122034[37] = 0.0;
   out_8891062055483122034[38] = 0.0;
   out_8891062055483122034[39] = 0.0;
   out_8891062055483122034[40] = 0.0;
   out_8891062055483122034[41] = 0.0;
   out_8891062055483122034[42] = 0.0;
   out_8891062055483122034[43] = 0.0;
   out_8891062055483122034[44] = 0.0;
   out_8891062055483122034[45] = 0.0;
   out_8891062055483122034[46] = 1.0;
   out_8891062055483122034[47] = 0.0;
   out_8891062055483122034[48] = 0.0;
   out_8891062055483122034[49] = 0.0;
   out_8891062055483122034[50] = 0.0;
   out_8891062055483122034[51] = 0.0;
   out_8891062055483122034[52] = 0.0;
   out_8891062055483122034[53] = 0.0;
   out_8891062055483122034[54] = 0.0;
   out_8891062055483122034[55] = 0.0;
   out_8891062055483122034[56] = 0.0;
   out_8891062055483122034[57] = 0.0;
   out_8891062055483122034[58] = 0.0;
   out_8891062055483122034[59] = 0.0;
   out_8891062055483122034[60] = 0.0;
   out_8891062055483122034[61] = 0.0;
   out_8891062055483122034[62] = 0.0;
   out_8891062055483122034[63] = 0.0;
   out_8891062055483122034[64] = 0.0;
   out_8891062055483122034[65] = 0.0;
   out_8891062055483122034[66] = 0.0;
   out_8891062055483122034[67] = 0.0;
   out_8891062055483122034[68] = 0.0;
   out_8891062055483122034[69] = -0.5*state[4];
   out_8891062055483122034[70] = -0.5*state[5];
   out_8891062055483122034[71] = -0.5*state[6];
   out_8891062055483122034[72] = 0.0;
   out_8891062055483122034[73] = 0.0;
   out_8891062055483122034[74] = 0.0;
   out_8891062055483122034[75] = 0.0;
   out_8891062055483122034[76] = 0.0;
   out_8891062055483122034[77] = 0.0;
   out_8891062055483122034[78] = 0.0;
   out_8891062055483122034[79] = 0.0;
   out_8891062055483122034[80] = 0.0;
   out_8891062055483122034[81] = 0.0;
   out_8891062055483122034[82] = 0.0;
   out_8891062055483122034[83] = 0.0;
   out_8891062055483122034[84] = 0.0;
   out_8891062055483122034[85] = 0.0;
   out_8891062055483122034[86] = 0.0;
   out_8891062055483122034[87] = 0.0;
   out_8891062055483122034[88] = 0.0;
   out_8891062055483122034[89] = 0.0;
   out_8891062055483122034[90] = 0.0;
   out_8891062055483122034[91] = 0.5*state[3];
   out_8891062055483122034[92] = 0.5*state[6];
   out_8891062055483122034[93] = -0.5*state[5];
   out_8891062055483122034[94] = 0.0;
   out_8891062055483122034[95] = 0.0;
   out_8891062055483122034[96] = 0.0;
   out_8891062055483122034[97] = 0.0;
   out_8891062055483122034[98] = 0.0;
   out_8891062055483122034[99] = 0.0;
   out_8891062055483122034[100] = 0.0;
   out_8891062055483122034[101] = 0.0;
   out_8891062055483122034[102] = 0.0;
   out_8891062055483122034[103] = 0.0;
   out_8891062055483122034[104] = 0.0;
   out_8891062055483122034[105] = 0.0;
   out_8891062055483122034[106] = 0.0;
   out_8891062055483122034[107] = 0.0;
   out_8891062055483122034[108] = 0.0;
   out_8891062055483122034[109] = 0.0;
   out_8891062055483122034[110] = 0.0;
   out_8891062055483122034[111] = 0.0;
   out_8891062055483122034[112] = 0.0;
   out_8891062055483122034[113] = -0.5*state[6];
   out_8891062055483122034[114] = 0.5*state[3];
   out_8891062055483122034[115] = 0.5*state[4];
   out_8891062055483122034[116] = 0.0;
   out_8891062055483122034[117] = 0.0;
   out_8891062055483122034[118] = 0.0;
   out_8891062055483122034[119] = 0.0;
   out_8891062055483122034[120] = 0.0;
   out_8891062055483122034[121] = 0.0;
   out_8891062055483122034[122] = 0.0;
   out_8891062055483122034[123] = 0.0;
   out_8891062055483122034[124] = 0.0;
   out_8891062055483122034[125] = 0.0;
   out_8891062055483122034[126] = 0.0;
   out_8891062055483122034[127] = 0.0;
   out_8891062055483122034[128] = 0.0;
   out_8891062055483122034[129] = 0.0;
   out_8891062055483122034[130] = 0.0;
   out_8891062055483122034[131] = 0.0;
   out_8891062055483122034[132] = 0.0;
   out_8891062055483122034[133] = 0.0;
   out_8891062055483122034[134] = 0.0;
   out_8891062055483122034[135] = 0.5*state[5];
   out_8891062055483122034[136] = -0.5*state[4];
   out_8891062055483122034[137] = 0.5*state[3];
   out_8891062055483122034[138] = 0.0;
   out_8891062055483122034[139] = 0.0;
   out_8891062055483122034[140] = 0.0;
   out_8891062055483122034[141] = 0.0;
   out_8891062055483122034[142] = 0.0;
   out_8891062055483122034[143] = 0.0;
   out_8891062055483122034[144] = 0.0;
   out_8891062055483122034[145] = 0.0;
   out_8891062055483122034[146] = 0.0;
   out_8891062055483122034[147] = 0.0;
   out_8891062055483122034[148] = 0.0;
   out_8891062055483122034[149] = 0.0;
   out_8891062055483122034[150] = 0.0;
   out_8891062055483122034[151] = 0.0;
   out_8891062055483122034[152] = 0.0;
   out_8891062055483122034[153] = 0.0;
   out_8891062055483122034[154] = 0.0;
   out_8891062055483122034[155] = 0.0;
   out_8891062055483122034[156] = 0.0;
   out_8891062055483122034[157] = 0.0;
   out_8891062055483122034[158] = 0.0;
   out_8891062055483122034[159] = 0.0;
   out_8891062055483122034[160] = 1.0;
   out_8891062055483122034[161] = 0.0;
   out_8891062055483122034[162] = 0.0;
   out_8891062055483122034[163] = 0.0;
   out_8891062055483122034[164] = 0.0;
   out_8891062055483122034[165] = 0.0;
   out_8891062055483122034[166] = 0.0;
   out_8891062055483122034[167] = 0.0;
   out_8891062055483122034[168] = 0.0;
   out_8891062055483122034[169] = 0.0;
   out_8891062055483122034[170] = 0.0;
   out_8891062055483122034[171] = 0.0;
   out_8891062055483122034[172] = 0.0;
   out_8891062055483122034[173] = 0.0;
   out_8891062055483122034[174] = 0.0;
   out_8891062055483122034[175] = 0.0;
   out_8891062055483122034[176] = 0.0;
   out_8891062055483122034[177] = 0.0;
   out_8891062055483122034[178] = 0.0;
   out_8891062055483122034[179] = 0.0;
   out_8891062055483122034[180] = 0.0;
   out_8891062055483122034[181] = 0.0;
   out_8891062055483122034[182] = 0.0;
   out_8891062055483122034[183] = 1.0;
   out_8891062055483122034[184] = 0.0;
   out_8891062055483122034[185] = 0.0;
   out_8891062055483122034[186] = 0.0;
   out_8891062055483122034[187] = 0.0;
   out_8891062055483122034[188] = 0.0;
   out_8891062055483122034[189] = 0.0;
   out_8891062055483122034[190] = 0.0;
   out_8891062055483122034[191] = 0.0;
   out_8891062055483122034[192] = 0.0;
   out_8891062055483122034[193] = 0.0;
   out_8891062055483122034[194] = 0.0;
   out_8891062055483122034[195] = 0.0;
   out_8891062055483122034[196] = 0.0;
   out_8891062055483122034[197] = 0.0;
   out_8891062055483122034[198] = 0.0;
   out_8891062055483122034[199] = 0.0;
   out_8891062055483122034[200] = 0.0;
   out_8891062055483122034[201] = 0.0;
   out_8891062055483122034[202] = 0.0;
   out_8891062055483122034[203] = 0.0;
   out_8891062055483122034[204] = 0.0;
   out_8891062055483122034[205] = 0.0;
   out_8891062055483122034[206] = 1.0;
   out_8891062055483122034[207] = 0.0;
   out_8891062055483122034[208] = 0.0;
   out_8891062055483122034[209] = 0.0;
   out_8891062055483122034[210] = 0.0;
   out_8891062055483122034[211] = 0.0;
   out_8891062055483122034[212] = 0.0;
   out_8891062055483122034[213] = 0.0;
   out_8891062055483122034[214] = 0.0;
   out_8891062055483122034[215] = 0.0;
   out_8891062055483122034[216] = 0.0;
   out_8891062055483122034[217] = 0.0;
   out_8891062055483122034[218] = 0.0;
   out_8891062055483122034[219] = 0.0;
   out_8891062055483122034[220] = 0.0;
   out_8891062055483122034[221] = 0.0;
   out_8891062055483122034[222] = 0.0;
   out_8891062055483122034[223] = 0.0;
   out_8891062055483122034[224] = 0.0;
   out_8891062055483122034[225] = 0.0;
   out_8891062055483122034[226] = 0.0;
   out_8891062055483122034[227] = 0.0;
   out_8891062055483122034[228] = 0.0;
   out_8891062055483122034[229] = 1.0;
   out_8891062055483122034[230] = 0.0;
   out_8891062055483122034[231] = 0.0;
   out_8891062055483122034[232] = 0.0;
   out_8891062055483122034[233] = 0.0;
   out_8891062055483122034[234] = 0.0;
   out_8891062055483122034[235] = 0.0;
   out_8891062055483122034[236] = 0.0;
   out_8891062055483122034[237] = 0.0;
   out_8891062055483122034[238] = 0.0;
   out_8891062055483122034[239] = 0.0;
   out_8891062055483122034[240] = 0.0;
   out_8891062055483122034[241] = 0.0;
   out_8891062055483122034[242] = 0.0;
   out_8891062055483122034[243] = 0.0;
   out_8891062055483122034[244] = 0.0;
   out_8891062055483122034[245] = 0.0;
   out_8891062055483122034[246] = 0.0;
   out_8891062055483122034[247] = 0.0;
   out_8891062055483122034[248] = 0.0;
   out_8891062055483122034[249] = 0.0;
   out_8891062055483122034[250] = 0.0;
   out_8891062055483122034[251] = 0.0;
   out_8891062055483122034[252] = 1.0;
   out_8891062055483122034[253] = 0.0;
   out_8891062055483122034[254] = 0.0;
   out_8891062055483122034[255] = 0.0;
   out_8891062055483122034[256] = 0.0;
   out_8891062055483122034[257] = 0.0;
   out_8891062055483122034[258] = 0.0;
   out_8891062055483122034[259] = 0.0;
   out_8891062055483122034[260] = 0.0;
   out_8891062055483122034[261] = 0.0;
   out_8891062055483122034[262] = 0.0;
   out_8891062055483122034[263] = 0.0;
   out_8891062055483122034[264] = 0.0;
   out_8891062055483122034[265] = 0.0;
   out_8891062055483122034[266] = 0.0;
   out_8891062055483122034[267] = 0.0;
   out_8891062055483122034[268] = 0.0;
   out_8891062055483122034[269] = 0.0;
   out_8891062055483122034[270] = 0.0;
   out_8891062055483122034[271] = 0.0;
   out_8891062055483122034[272] = 0.0;
   out_8891062055483122034[273] = 0.0;
   out_8891062055483122034[274] = 0.0;
   out_8891062055483122034[275] = 1.0;
   out_8891062055483122034[276] = 0.0;
   out_8891062055483122034[277] = 0.0;
   out_8891062055483122034[278] = 0.0;
   out_8891062055483122034[279] = 0.0;
   out_8891062055483122034[280] = 0.0;
   out_8891062055483122034[281] = 0.0;
   out_8891062055483122034[282] = 0.0;
   out_8891062055483122034[283] = 0.0;
   out_8891062055483122034[284] = 0.0;
   out_8891062055483122034[285] = 0.0;
   out_8891062055483122034[286] = 0.0;
   out_8891062055483122034[287] = 0.0;
   out_8891062055483122034[288] = 0.0;
   out_8891062055483122034[289] = 0.0;
   out_8891062055483122034[290] = 0.0;
   out_8891062055483122034[291] = 0.0;
   out_8891062055483122034[292] = 0.0;
   out_8891062055483122034[293] = 0.0;
   out_8891062055483122034[294] = 0.0;
   out_8891062055483122034[295] = 0.0;
   out_8891062055483122034[296] = 0.0;
   out_8891062055483122034[297] = 0.0;
   out_8891062055483122034[298] = 1.0;
   out_8891062055483122034[299] = 0.0;
   out_8891062055483122034[300] = 0.0;
   out_8891062055483122034[301] = 0.0;
   out_8891062055483122034[302] = 0.0;
   out_8891062055483122034[303] = 0.0;
   out_8891062055483122034[304] = 0.0;
   out_8891062055483122034[305] = 0.0;
   out_8891062055483122034[306] = 0.0;
   out_8891062055483122034[307] = 0.0;
   out_8891062055483122034[308] = 0.0;
   out_8891062055483122034[309] = 0.0;
   out_8891062055483122034[310] = 0.0;
   out_8891062055483122034[311] = 0.0;
   out_8891062055483122034[312] = 0.0;
   out_8891062055483122034[313] = 0.0;
   out_8891062055483122034[314] = 0.0;
   out_8891062055483122034[315] = 0.0;
   out_8891062055483122034[316] = 0.0;
   out_8891062055483122034[317] = 0.0;
   out_8891062055483122034[318] = 0.0;
   out_8891062055483122034[319] = 0.0;
   out_8891062055483122034[320] = 0.0;
   out_8891062055483122034[321] = 1.0;
   out_8891062055483122034[322] = 0.0;
   out_8891062055483122034[323] = 0.0;
   out_8891062055483122034[324] = 0.0;
   out_8891062055483122034[325] = 0.0;
   out_8891062055483122034[326] = 0.0;
   out_8891062055483122034[327] = 0.0;
   out_8891062055483122034[328] = 0.0;
   out_8891062055483122034[329] = 0.0;
   out_8891062055483122034[330] = 0.0;
   out_8891062055483122034[331] = 0.0;
   out_8891062055483122034[332] = 0.0;
   out_8891062055483122034[333] = 0.0;
   out_8891062055483122034[334] = 0.0;
   out_8891062055483122034[335] = 0.0;
   out_8891062055483122034[336] = 0.0;
   out_8891062055483122034[337] = 0.0;
   out_8891062055483122034[338] = 0.0;
   out_8891062055483122034[339] = 0.0;
   out_8891062055483122034[340] = 0.0;
   out_8891062055483122034[341] = 0.0;
   out_8891062055483122034[342] = 0.0;
   out_8891062055483122034[343] = 0.0;
   out_8891062055483122034[344] = 1.0;
   out_8891062055483122034[345] = 0.0;
   out_8891062055483122034[346] = 0.0;
   out_8891062055483122034[347] = 0.0;
   out_8891062055483122034[348] = 0.0;
   out_8891062055483122034[349] = 0.0;
   out_8891062055483122034[350] = 0.0;
   out_8891062055483122034[351] = 0.0;
   out_8891062055483122034[352] = 0.0;
   out_8891062055483122034[353] = 0.0;
   out_8891062055483122034[354] = 0.0;
   out_8891062055483122034[355] = 0.0;
   out_8891062055483122034[356] = 0.0;
   out_8891062055483122034[357] = 0.0;
   out_8891062055483122034[358] = 0.0;
   out_8891062055483122034[359] = 0.0;
   out_8891062055483122034[360] = 0.0;
   out_8891062055483122034[361] = 0.0;
   out_8891062055483122034[362] = 0.0;
   out_8891062055483122034[363] = 0.0;
   out_8891062055483122034[364] = 0.0;
   out_8891062055483122034[365] = 0.0;
   out_8891062055483122034[366] = 0.0;
   out_8891062055483122034[367] = 1.0;
   out_8891062055483122034[368] = 0.0;
   out_8891062055483122034[369] = 0.0;
   out_8891062055483122034[370] = 0.0;
   out_8891062055483122034[371] = 0.0;
   out_8891062055483122034[372] = 0.0;
   out_8891062055483122034[373] = 0.0;
   out_8891062055483122034[374] = 0.0;
   out_8891062055483122034[375] = 0.0;
   out_8891062055483122034[376] = 0.0;
   out_8891062055483122034[377] = 0.0;
   out_8891062055483122034[378] = 0.0;
   out_8891062055483122034[379] = 0.0;
   out_8891062055483122034[380] = 0.0;
   out_8891062055483122034[381] = 0.0;
   out_8891062055483122034[382] = 0.0;
   out_8891062055483122034[383] = 0.0;
   out_8891062055483122034[384] = 0.0;
   out_8891062055483122034[385] = 0.0;
   out_8891062055483122034[386] = 0.0;
   out_8891062055483122034[387] = 0.0;
   out_8891062055483122034[388] = 0.0;
   out_8891062055483122034[389] = 0.0;
   out_8891062055483122034[390] = 1.0;
   out_8891062055483122034[391] = 0.0;
   out_8891062055483122034[392] = 0.0;
   out_8891062055483122034[393] = 0.0;
   out_8891062055483122034[394] = 0.0;
   out_8891062055483122034[395] = 0.0;
   out_8891062055483122034[396] = 0.0;
   out_8891062055483122034[397] = 0.0;
   out_8891062055483122034[398] = 0.0;
   out_8891062055483122034[399] = 0.0;
   out_8891062055483122034[400] = 0.0;
   out_8891062055483122034[401] = 0.0;
   out_8891062055483122034[402] = 0.0;
   out_8891062055483122034[403] = 0.0;
   out_8891062055483122034[404] = 0.0;
   out_8891062055483122034[405] = 0.0;
   out_8891062055483122034[406] = 0.0;
   out_8891062055483122034[407] = 0.0;
   out_8891062055483122034[408] = 0.0;
   out_8891062055483122034[409] = 0.0;
   out_8891062055483122034[410] = 0.0;
   out_8891062055483122034[411] = 0.0;
   out_8891062055483122034[412] = 0.0;
   out_8891062055483122034[413] = 1.0;
   out_8891062055483122034[414] = 0.0;
   out_8891062055483122034[415] = 0.0;
   out_8891062055483122034[416] = 0.0;
   out_8891062055483122034[417] = 0.0;
   out_8891062055483122034[418] = 0.0;
   out_8891062055483122034[419] = 0.0;
   out_8891062055483122034[420] = 0.0;
   out_8891062055483122034[421] = 0.0;
   out_8891062055483122034[422] = 0.0;
   out_8891062055483122034[423] = 0.0;
   out_8891062055483122034[424] = 0.0;
   out_8891062055483122034[425] = 0.0;
   out_8891062055483122034[426] = 0.0;
   out_8891062055483122034[427] = 0.0;
   out_8891062055483122034[428] = 0.0;
   out_8891062055483122034[429] = 0.0;
   out_8891062055483122034[430] = 0.0;
   out_8891062055483122034[431] = 0.0;
   out_8891062055483122034[432] = 0.0;
   out_8891062055483122034[433] = 0.0;
   out_8891062055483122034[434] = 0.0;
   out_8891062055483122034[435] = 0.0;
   out_8891062055483122034[436] = 1.0;
   out_8891062055483122034[437] = 0.0;
   out_8891062055483122034[438] = 0.0;
   out_8891062055483122034[439] = 0.0;
   out_8891062055483122034[440] = 0.0;
   out_8891062055483122034[441] = 0.0;
   out_8891062055483122034[442] = 0.0;
   out_8891062055483122034[443] = 0.0;
   out_8891062055483122034[444] = 0.0;
   out_8891062055483122034[445] = 0.0;
   out_8891062055483122034[446] = 0.0;
   out_8891062055483122034[447] = 0.0;
   out_8891062055483122034[448] = 0.0;
   out_8891062055483122034[449] = 0.0;
   out_8891062055483122034[450] = 0.0;
   out_8891062055483122034[451] = 0.0;
   out_8891062055483122034[452] = 0.0;
   out_8891062055483122034[453] = 0.0;
   out_8891062055483122034[454] = 0.0;
   out_8891062055483122034[455] = 0.0;
   out_8891062055483122034[456] = 0.0;
   out_8891062055483122034[457] = 0.0;
   out_8891062055483122034[458] = 0.0;
   out_8891062055483122034[459] = 1.0;
   out_8891062055483122034[460] = 0.0;
   out_8891062055483122034[461] = 0.0;
   out_8891062055483122034[462] = 0.0;
   out_8891062055483122034[463] = 0.0;
   out_8891062055483122034[464] = 0.0;
   out_8891062055483122034[465] = 0.0;
   out_8891062055483122034[466] = 0.0;
   out_8891062055483122034[467] = 0.0;
   out_8891062055483122034[468] = 0.0;
   out_8891062055483122034[469] = 0.0;
   out_8891062055483122034[470] = 0.0;
   out_8891062055483122034[471] = 0.0;
   out_8891062055483122034[472] = 0.0;
   out_8891062055483122034[473] = 0.0;
   out_8891062055483122034[474] = 0.0;
   out_8891062055483122034[475] = 0.0;
   out_8891062055483122034[476] = 0.0;
   out_8891062055483122034[477] = 0.0;
   out_8891062055483122034[478] = 0.0;
   out_8891062055483122034[479] = 0.0;
   out_8891062055483122034[480] = 0.0;
   out_8891062055483122034[481] = 0.0;
   out_8891062055483122034[482] = 1.0;
   out_8891062055483122034[483] = 0.0;
   out_8891062055483122034[484] = 0.0;
   out_8891062055483122034[485] = 0.0;
   out_8891062055483122034[486] = 0.0;
   out_8891062055483122034[487] = 0.0;
   out_8891062055483122034[488] = 0.0;
   out_8891062055483122034[489] = 0.0;
   out_8891062055483122034[490] = 0.0;
   out_8891062055483122034[491] = 0.0;
   out_8891062055483122034[492] = 0.0;
   out_8891062055483122034[493] = 0.0;
   out_8891062055483122034[494] = 0.0;
   out_8891062055483122034[495] = 0.0;
   out_8891062055483122034[496] = 0.0;
   out_8891062055483122034[497] = 0.0;
   out_8891062055483122034[498] = 0.0;
   out_8891062055483122034[499] = 0.0;
   out_8891062055483122034[500] = 0.0;
   out_8891062055483122034[501] = 0.0;
   out_8891062055483122034[502] = 0.0;
   out_8891062055483122034[503] = 0.0;
   out_8891062055483122034[504] = 0.0;
   out_8891062055483122034[505] = 1.0;
}
void f_fun(double *state, double dt, double *out_2240038446206287964) {
   out_2240038446206287964[0] = dt*state[7] + state[0];
   out_2240038446206287964[1] = dt*state[8] + state[1];
   out_2240038446206287964[2] = dt*state[9] + state[2];
   out_2240038446206287964[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2240038446206287964[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2240038446206287964[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2240038446206287964[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2240038446206287964[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[19] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[18] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[7];
   out_2240038446206287964[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[19] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[18]) + state[8];
   out_2240038446206287964[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]) + state[9];
   out_2240038446206287964[10] = state[10];
   out_2240038446206287964[11] = state[11];
   out_2240038446206287964[12] = state[12];
   out_2240038446206287964[13] = state[13];
   out_2240038446206287964[14] = state[14];
   out_2240038446206287964[15] = state[15];
   out_2240038446206287964[16] = state[16];
   out_2240038446206287964[17] = state[17];
   out_2240038446206287964[18] = state[18];
   out_2240038446206287964[19] = state[19];
   out_2240038446206287964[20] = state[20];
   out_2240038446206287964[21] = state[21];
   out_2240038446206287964[22] = state[22];
}
void F_fun(double *state, double dt, double *out_7703937601435102592) {
   out_7703937601435102592[0] = 1;
   out_7703937601435102592[1] = 0;
   out_7703937601435102592[2] = 0;
   out_7703937601435102592[3] = 0;
   out_7703937601435102592[4] = 0;
   out_7703937601435102592[5] = 0;
   out_7703937601435102592[6] = dt;
   out_7703937601435102592[7] = 0;
   out_7703937601435102592[8] = 0;
   out_7703937601435102592[9] = 0;
   out_7703937601435102592[10] = 0;
   out_7703937601435102592[11] = 0;
   out_7703937601435102592[12] = 0;
   out_7703937601435102592[13] = 0;
   out_7703937601435102592[14] = 0;
   out_7703937601435102592[15] = 0;
   out_7703937601435102592[16] = 0;
   out_7703937601435102592[17] = 0;
   out_7703937601435102592[18] = 0;
   out_7703937601435102592[19] = 0;
   out_7703937601435102592[20] = 0;
   out_7703937601435102592[21] = 0;
   out_7703937601435102592[22] = 0;
   out_7703937601435102592[23] = 1;
   out_7703937601435102592[24] = 0;
   out_7703937601435102592[25] = 0;
   out_7703937601435102592[26] = 0;
   out_7703937601435102592[27] = 0;
   out_7703937601435102592[28] = 0;
   out_7703937601435102592[29] = dt;
   out_7703937601435102592[30] = 0;
   out_7703937601435102592[31] = 0;
   out_7703937601435102592[32] = 0;
   out_7703937601435102592[33] = 0;
   out_7703937601435102592[34] = 0;
   out_7703937601435102592[35] = 0;
   out_7703937601435102592[36] = 0;
   out_7703937601435102592[37] = 0;
   out_7703937601435102592[38] = 0;
   out_7703937601435102592[39] = 0;
   out_7703937601435102592[40] = 0;
   out_7703937601435102592[41] = 0;
   out_7703937601435102592[42] = 0;
   out_7703937601435102592[43] = 0;
   out_7703937601435102592[44] = 0;
   out_7703937601435102592[45] = 0;
   out_7703937601435102592[46] = 1;
   out_7703937601435102592[47] = 0;
   out_7703937601435102592[48] = 0;
   out_7703937601435102592[49] = 0;
   out_7703937601435102592[50] = 0;
   out_7703937601435102592[51] = 0;
   out_7703937601435102592[52] = dt;
   out_7703937601435102592[53] = 0;
   out_7703937601435102592[54] = 0;
   out_7703937601435102592[55] = 0;
   out_7703937601435102592[56] = 0;
   out_7703937601435102592[57] = 0;
   out_7703937601435102592[58] = 0;
   out_7703937601435102592[59] = 0;
   out_7703937601435102592[60] = 0;
   out_7703937601435102592[61] = 0;
   out_7703937601435102592[62] = 0;
   out_7703937601435102592[63] = 0;
   out_7703937601435102592[64] = 0;
   out_7703937601435102592[65] = 0;
   out_7703937601435102592[66] = 0;
   out_7703937601435102592[67] = 0;
   out_7703937601435102592[68] = 0;
   out_7703937601435102592[69] = 1;
   out_7703937601435102592[70] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7703937601435102592[71] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7703937601435102592[72] = 0;
   out_7703937601435102592[73] = 0;
   out_7703937601435102592[74] = 0;
   out_7703937601435102592[75] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7703937601435102592[76] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7703937601435102592[77] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7703937601435102592[78] = 0;
   out_7703937601435102592[79] = 0;
   out_7703937601435102592[80] = 0;
   out_7703937601435102592[81] = 0;
   out_7703937601435102592[82] = 0;
   out_7703937601435102592[83] = 0;
   out_7703937601435102592[84] = 0;
   out_7703937601435102592[85] = 0;
   out_7703937601435102592[86] = 0;
   out_7703937601435102592[87] = 0;
   out_7703937601435102592[88] = 0;
   out_7703937601435102592[89] = 0;
   out_7703937601435102592[90] = 0;
   out_7703937601435102592[91] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7703937601435102592[92] = 1;
   out_7703937601435102592[93] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7703937601435102592[94] = 0;
   out_7703937601435102592[95] = 0;
   out_7703937601435102592[96] = 0;
   out_7703937601435102592[97] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7703937601435102592[98] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7703937601435102592[99] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7703937601435102592[100] = 0;
   out_7703937601435102592[101] = 0;
   out_7703937601435102592[102] = 0;
   out_7703937601435102592[103] = 0;
   out_7703937601435102592[104] = 0;
   out_7703937601435102592[105] = 0;
   out_7703937601435102592[106] = 0;
   out_7703937601435102592[107] = 0;
   out_7703937601435102592[108] = 0;
   out_7703937601435102592[109] = 0;
   out_7703937601435102592[110] = 0;
   out_7703937601435102592[111] = 0;
   out_7703937601435102592[112] = 0;
   out_7703937601435102592[113] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7703937601435102592[114] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7703937601435102592[115] = 1;
   out_7703937601435102592[116] = 0;
   out_7703937601435102592[117] = 0;
   out_7703937601435102592[118] = 0;
   out_7703937601435102592[119] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7703937601435102592[120] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7703937601435102592[121] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7703937601435102592[122] = 0;
   out_7703937601435102592[123] = 0;
   out_7703937601435102592[124] = 0;
   out_7703937601435102592[125] = 0;
   out_7703937601435102592[126] = 0;
   out_7703937601435102592[127] = 0;
   out_7703937601435102592[128] = 0;
   out_7703937601435102592[129] = 0;
   out_7703937601435102592[130] = 0;
   out_7703937601435102592[131] = 0;
   out_7703937601435102592[132] = 0;
   out_7703937601435102592[133] = 0;
   out_7703937601435102592[134] = 0;
   out_7703937601435102592[135] = 0;
   out_7703937601435102592[136] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]);
   out_7703937601435102592[137] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[19] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7703937601435102592[138] = 1;
   out_7703937601435102592[139] = 0;
   out_7703937601435102592[140] = 0;
   out_7703937601435102592[141] = 0;
   out_7703937601435102592[142] = 0;
   out_7703937601435102592[143] = 0;
   out_7703937601435102592[144] = 0;
   out_7703937601435102592[145] = 0;
   out_7703937601435102592[146] = 0;
   out_7703937601435102592[147] = 0;
   out_7703937601435102592[148] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7703937601435102592[149] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7703937601435102592[150] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7703937601435102592[151] = 0;
   out_7703937601435102592[152] = 0;
   out_7703937601435102592[153] = 0;
   out_7703937601435102592[154] = 0;
   out_7703937601435102592[155] = 0;
   out_7703937601435102592[156] = 0;
   out_7703937601435102592[157] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[18] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]);
   out_7703937601435102592[158] = 0;
   out_7703937601435102592[159] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[19] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[18] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7703937601435102592[160] = 0;
   out_7703937601435102592[161] = 1;
   out_7703937601435102592[162] = 0;
   out_7703937601435102592[163] = 0;
   out_7703937601435102592[164] = 0;
   out_7703937601435102592[165] = 0;
   out_7703937601435102592[166] = 0;
   out_7703937601435102592[167] = 0;
   out_7703937601435102592[168] = 0;
   out_7703937601435102592[169] = 0;
   out_7703937601435102592[170] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7703937601435102592[171] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7703937601435102592[172] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7703937601435102592[173] = 0;
   out_7703937601435102592[174] = 0;
   out_7703937601435102592[175] = 0;
   out_7703937601435102592[176] = 0;
   out_7703937601435102592[177] = 0;
   out_7703937601435102592[178] = 0;
   out_7703937601435102592[179] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[19] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[18]);
   out_7703937601435102592[180] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[19] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[18] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7703937601435102592[181] = 0;
   out_7703937601435102592[182] = 0;
   out_7703937601435102592[183] = 0;
   out_7703937601435102592[184] = 1;
   out_7703937601435102592[185] = 0;
   out_7703937601435102592[186] = 0;
   out_7703937601435102592[187] = 0;
   out_7703937601435102592[188] = 0;
   out_7703937601435102592[189] = 0;
   out_7703937601435102592[190] = 0;
   out_7703937601435102592[191] = 0;
   out_7703937601435102592[192] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7703937601435102592[193] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7703937601435102592[194] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7703937601435102592[195] = 0;
   out_7703937601435102592[196] = 0;
   out_7703937601435102592[197] = 0;
   out_7703937601435102592[198] = 0;
   out_7703937601435102592[199] = 0;
   out_7703937601435102592[200] = 0;
   out_7703937601435102592[201] = 0;
   out_7703937601435102592[202] = 0;
   out_7703937601435102592[203] = 0;
   out_7703937601435102592[204] = 0;
   out_7703937601435102592[205] = 0;
   out_7703937601435102592[206] = 0;
   out_7703937601435102592[207] = 1;
   out_7703937601435102592[208] = 0;
   out_7703937601435102592[209] = 0;
   out_7703937601435102592[210] = 0;
   out_7703937601435102592[211] = 0;
   out_7703937601435102592[212] = 0;
   out_7703937601435102592[213] = 0;
   out_7703937601435102592[214] = 0;
   out_7703937601435102592[215] = 0;
   out_7703937601435102592[216] = 0;
   out_7703937601435102592[217] = 0;
   out_7703937601435102592[218] = 0;
   out_7703937601435102592[219] = 0;
   out_7703937601435102592[220] = 0;
   out_7703937601435102592[221] = 0;
   out_7703937601435102592[222] = 0;
   out_7703937601435102592[223] = 0;
   out_7703937601435102592[224] = 0;
   out_7703937601435102592[225] = 0;
   out_7703937601435102592[226] = 0;
   out_7703937601435102592[227] = 0;
   out_7703937601435102592[228] = 0;
   out_7703937601435102592[229] = 0;
   out_7703937601435102592[230] = 1;
   out_7703937601435102592[231] = 0;
   out_7703937601435102592[232] = 0;
   out_7703937601435102592[233] = 0;
   out_7703937601435102592[234] = 0;
   out_7703937601435102592[235] = 0;
   out_7703937601435102592[236] = 0;
   out_7703937601435102592[237] = 0;
   out_7703937601435102592[238] = 0;
   out_7703937601435102592[239] = 0;
   out_7703937601435102592[240] = 0;
   out_7703937601435102592[241] = 0;
   out_7703937601435102592[242] = 0;
   out_7703937601435102592[243] = 0;
   out_7703937601435102592[244] = 0;
   out_7703937601435102592[245] = 0;
   out_7703937601435102592[246] = 0;
   out_7703937601435102592[247] = 0;
   out_7703937601435102592[248] = 0;
   out_7703937601435102592[249] = 0;
   out_7703937601435102592[250] = 0;
   out_7703937601435102592[251] = 0;
   out_7703937601435102592[252] = 0;
   out_7703937601435102592[253] = 1;
   out_7703937601435102592[254] = 0;
   out_7703937601435102592[255] = 0;
   out_7703937601435102592[256] = 0;
   out_7703937601435102592[257] = 0;
   out_7703937601435102592[258] = 0;
   out_7703937601435102592[259] = 0;
   out_7703937601435102592[260] = 0;
   out_7703937601435102592[261] = 0;
   out_7703937601435102592[262] = 0;
   out_7703937601435102592[263] = 0;
   out_7703937601435102592[264] = 0;
   out_7703937601435102592[265] = 0;
   out_7703937601435102592[266] = 0;
   out_7703937601435102592[267] = 0;
   out_7703937601435102592[268] = 0;
   out_7703937601435102592[269] = 0;
   out_7703937601435102592[270] = 0;
   out_7703937601435102592[271] = 0;
   out_7703937601435102592[272] = 0;
   out_7703937601435102592[273] = 0;
   out_7703937601435102592[274] = 0;
   out_7703937601435102592[275] = 0;
   out_7703937601435102592[276] = 1;
   out_7703937601435102592[277] = 0;
   out_7703937601435102592[278] = 0;
   out_7703937601435102592[279] = 0;
   out_7703937601435102592[280] = 0;
   out_7703937601435102592[281] = 0;
   out_7703937601435102592[282] = 0;
   out_7703937601435102592[283] = 0;
   out_7703937601435102592[284] = 0;
   out_7703937601435102592[285] = 0;
   out_7703937601435102592[286] = 0;
   out_7703937601435102592[287] = 0;
   out_7703937601435102592[288] = 0;
   out_7703937601435102592[289] = 0;
   out_7703937601435102592[290] = 0;
   out_7703937601435102592[291] = 0;
   out_7703937601435102592[292] = 0;
   out_7703937601435102592[293] = 0;
   out_7703937601435102592[294] = 0;
   out_7703937601435102592[295] = 0;
   out_7703937601435102592[296] = 0;
   out_7703937601435102592[297] = 0;
   out_7703937601435102592[298] = 0;
   out_7703937601435102592[299] = 1;
   out_7703937601435102592[300] = 0;
   out_7703937601435102592[301] = 0;
   out_7703937601435102592[302] = 0;
   out_7703937601435102592[303] = 0;
   out_7703937601435102592[304] = 0;
   out_7703937601435102592[305] = 0;
   out_7703937601435102592[306] = 0;
   out_7703937601435102592[307] = 0;
   out_7703937601435102592[308] = 0;
   out_7703937601435102592[309] = 0;
   out_7703937601435102592[310] = 0;
   out_7703937601435102592[311] = 0;
   out_7703937601435102592[312] = 0;
   out_7703937601435102592[313] = 0;
   out_7703937601435102592[314] = 0;
   out_7703937601435102592[315] = 0;
   out_7703937601435102592[316] = 0;
   out_7703937601435102592[317] = 0;
   out_7703937601435102592[318] = 0;
   out_7703937601435102592[319] = 0;
   out_7703937601435102592[320] = 0;
   out_7703937601435102592[321] = 0;
   out_7703937601435102592[322] = 1;
   out_7703937601435102592[323] = 0;
   out_7703937601435102592[324] = 0;
   out_7703937601435102592[325] = 0;
   out_7703937601435102592[326] = 0;
   out_7703937601435102592[327] = 0;
   out_7703937601435102592[328] = 0;
   out_7703937601435102592[329] = 0;
   out_7703937601435102592[330] = 0;
   out_7703937601435102592[331] = 0;
   out_7703937601435102592[332] = 0;
   out_7703937601435102592[333] = 0;
   out_7703937601435102592[334] = 0;
   out_7703937601435102592[335] = 0;
   out_7703937601435102592[336] = 0;
   out_7703937601435102592[337] = 0;
   out_7703937601435102592[338] = 0;
   out_7703937601435102592[339] = 0;
   out_7703937601435102592[340] = 0;
   out_7703937601435102592[341] = 0;
   out_7703937601435102592[342] = 0;
   out_7703937601435102592[343] = 0;
   out_7703937601435102592[344] = 0;
   out_7703937601435102592[345] = 1;
   out_7703937601435102592[346] = 0;
   out_7703937601435102592[347] = 0;
   out_7703937601435102592[348] = 0;
   out_7703937601435102592[349] = 0;
   out_7703937601435102592[350] = 0;
   out_7703937601435102592[351] = 0;
   out_7703937601435102592[352] = 0;
   out_7703937601435102592[353] = 0;
   out_7703937601435102592[354] = 0;
   out_7703937601435102592[355] = 0;
   out_7703937601435102592[356] = 0;
   out_7703937601435102592[357] = 0;
   out_7703937601435102592[358] = 0;
   out_7703937601435102592[359] = 0;
   out_7703937601435102592[360] = 0;
   out_7703937601435102592[361] = 0;
   out_7703937601435102592[362] = 0;
   out_7703937601435102592[363] = 0;
   out_7703937601435102592[364] = 0;
   out_7703937601435102592[365] = 0;
   out_7703937601435102592[366] = 0;
   out_7703937601435102592[367] = 0;
   out_7703937601435102592[368] = 1;
   out_7703937601435102592[369] = 0;
   out_7703937601435102592[370] = 0;
   out_7703937601435102592[371] = 0;
   out_7703937601435102592[372] = 0;
   out_7703937601435102592[373] = 0;
   out_7703937601435102592[374] = 0;
   out_7703937601435102592[375] = 0;
   out_7703937601435102592[376] = 0;
   out_7703937601435102592[377] = 0;
   out_7703937601435102592[378] = 0;
   out_7703937601435102592[379] = 0;
   out_7703937601435102592[380] = 0;
   out_7703937601435102592[381] = 0;
   out_7703937601435102592[382] = 0;
   out_7703937601435102592[383] = 0;
   out_7703937601435102592[384] = 0;
   out_7703937601435102592[385] = 0;
   out_7703937601435102592[386] = 0;
   out_7703937601435102592[387] = 0;
   out_7703937601435102592[388] = 0;
   out_7703937601435102592[389] = 0;
   out_7703937601435102592[390] = 0;
   out_7703937601435102592[391] = 1;
   out_7703937601435102592[392] = 0;
   out_7703937601435102592[393] = 0;
   out_7703937601435102592[394] = 0;
   out_7703937601435102592[395] = 0;
   out_7703937601435102592[396] = 0;
   out_7703937601435102592[397] = 0;
   out_7703937601435102592[398] = 0;
   out_7703937601435102592[399] = 0;
   out_7703937601435102592[400] = 0;
   out_7703937601435102592[401] = 0;
   out_7703937601435102592[402] = 0;
   out_7703937601435102592[403] = 0;
   out_7703937601435102592[404] = 0;
   out_7703937601435102592[405] = 0;
   out_7703937601435102592[406] = 0;
   out_7703937601435102592[407] = 0;
   out_7703937601435102592[408] = 0;
   out_7703937601435102592[409] = 0;
   out_7703937601435102592[410] = 0;
   out_7703937601435102592[411] = 0;
   out_7703937601435102592[412] = 0;
   out_7703937601435102592[413] = 0;
   out_7703937601435102592[414] = 1;
   out_7703937601435102592[415] = 0;
   out_7703937601435102592[416] = 0;
   out_7703937601435102592[417] = 0;
   out_7703937601435102592[418] = 0;
   out_7703937601435102592[419] = 0;
   out_7703937601435102592[420] = 0;
   out_7703937601435102592[421] = 0;
   out_7703937601435102592[422] = 0;
   out_7703937601435102592[423] = 0;
   out_7703937601435102592[424] = 0;
   out_7703937601435102592[425] = 0;
   out_7703937601435102592[426] = 0;
   out_7703937601435102592[427] = 0;
   out_7703937601435102592[428] = 0;
   out_7703937601435102592[429] = 0;
   out_7703937601435102592[430] = 0;
   out_7703937601435102592[431] = 0;
   out_7703937601435102592[432] = 0;
   out_7703937601435102592[433] = 0;
   out_7703937601435102592[434] = 0;
   out_7703937601435102592[435] = 0;
   out_7703937601435102592[436] = 0;
   out_7703937601435102592[437] = 1;
   out_7703937601435102592[438] = 0;
   out_7703937601435102592[439] = 0;
   out_7703937601435102592[440] = 0;
   out_7703937601435102592[441] = 0;
   out_7703937601435102592[442] = 0;
   out_7703937601435102592[443] = 0;
   out_7703937601435102592[444] = 0;
   out_7703937601435102592[445] = 0;
   out_7703937601435102592[446] = 0;
   out_7703937601435102592[447] = 0;
   out_7703937601435102592[448] = 0;
   out_7703937601435102592[449] = 0;
   out_7703937601435102592[450] = 0;
   out_7703937601435102592[451] = 0;
   out_7703937601435102592[452] = 0;
   out_7703937601435102592[453] = 0;
   out_7703937601435102592[454] = 0;
   out_7703937601435102592[455] = 0;
   out_7703937601435102592[456] = 0;
   out_7703937601435102592[457] = 0;
   out_7703937601435102592[458] = 0;
   out_7703937601435102592[459] = 0;
   out_7703937601435102592[460] = 1;
   out_7703937601435102592[461] = 0;
   out_7703937601435102592[462] = 0;
   out_7703937601435102592[463] = 0;
   out_7703937601435102592[464] = 0;
   out_7703937601435102592[465] = 0;
   out_7703937601435102592[466] = 0;
   out_7703937601435102592[467] = 0;
   out_7703937601435102592[468] = 0;
   out_7703937601435102592[469] = 0;
   out_7703937601435102592[470] = 0;
   out_7703937601435102592[471] = 0;
   out_7703937601435102592[472] = 0;
   out_7703937601435102592[473] = 0;
   out_7703937601435102592[474] = 0;
   out_7703937601435102592[475] = 0;
   out_7703937601435102592[476] = 0;
   out_7703937601435102592[477] = 0;
   out_7703937601435102592[478] = 0;
   out_7703937601435102592[479] = 0;
   out_7703937601435102592[480] = 0;
   out_7703937601435102592[481] = 0;
   out_7703937601435102592[482] = 0;
   out_7703937601435102592[483] = 1;
}
void h_3(double *state, double *unused, double *out_7428854366516085539) {
   out_7428854366516085539[0] = sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7)*state[16];
}
void H_3(double *state, double *unused, double *out_3256564296091412995) {
   out_3256564296091412995[0] = 0;
   out_3256564296091412995[1] = 0;
   out_3256564296091412995[2] = 0;
   out_3256564296091412995[3] = 0;
   out_3256564296091412995[4] = 0;
   out_3256564296091412995[5] = 0;
   out_3256564296091412995[6] = 0;
   out_3256564296091412995[7] = state[7]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_3256564296091412995[8] = state[8]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_3256564296091412995[9] = state[9]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_3256564296091412995[10] = 0;
   out_3256564296091412995[11] = 0;
   out_3256564296091412995[12] = 0;
   out_3256564296091412995[13] = 0;
   out_3256564296091412995[14] = 0;
   out_3256564296091412995[15] = 0;
   out_3256564296091412995[16] = sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_3256564296091412995[17] = 0;
   out_3256564296091412995[18] = 0;
   out_3256564296091412995[19] = 0;
   out_3256564296091412995[20] = 0;
   out_3256564296091412995[21] = 0;
   out_3256564296091412995[22] = 0;
}
void h_4(double *state, double *unused, double *out_8430018997242678260) {
   out_8430018997242678260[0] = state[10] + state[13];
   out_8430018997242678260[1] = state[11] + state[14];
   out_8430018997242678260[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2082170513073981530) {
   out_2082170513073981530[0] = 0;
   out_2082170513073981530[1] = 0;
   out_2082170513073981530[2] = 0;
   out_2082170513073981530[3] = 0;
   out_2082170513073981530[4] = 0;
   out_2082170513073981530[5] = 0;
   out_2082170513073981530[6] = 0;
   out_2082170513073981530[7] = 0;
   out_2082170513073981530[8] = 0;
   out_2082170513073981530[9] = 0;
   out_2082170513073981530[10] = 1;
   out_2082170513073981530[11] = 0;
   out_2082170513073981530[12] = 0;
   out_2082170513073981530[13] = 1;
   out_2082170513073981530[14] = 0;
   out_2082170513073981530[15] = 0;
   out_2082170513073981530[16] = 0;
   out_2082170513073981530[17] = 0;
   out_2082170513073981530[18] = 0;
   out_2082170513073981530[19] = 0;
   out_2082170513073981530[20] = 0;
   out_2082170513073981530[21] = 0;
   out_2082170513073981530[22] = 0;
   out_2082170513073981530[23] = 0;
   out_2082170513073981530[24] = 0;
   out_2082170513073981530[25] = 0;
   out_2082170513073981530[26] = 0;
   out_2082170513073981530[27] = 0;
   out_2082170513073981530[28] = 0;
   out_2082170513073981530[29] = 0;
   out_2082170513073981530[30] = 0;
   out_2082170513073981530[31] = 0;
   out_2082170513073981530[32] = 0;
   out_2082170513073981530[33] = 0;
   out_2082170513073981530[34] = 1;
   out_2082170513073981530[35] = 0;
   out_2082170513073981530[36] = 0;
   out_2082170513073981530[37] = 1;
   out_2082170513073981530[38] = 0;
   out_2082170513073981530[39] = 0;
   out_2082170513073981530[40] = 0;
   out_2082170513073981530[41] = 0;
   out_2082170513073981530[42] = 0;
   out_2082170513073981530[43] = 0;
   out_2082170513073981530[44] = 0;
   out_2082170513073981530[45] = 0;
   out_2082170513073981530[46] = 0;
   out_2082170513073981530[47] = 0;
   out_2082170513073981530[48] = 0;
   out_2082170513073981530[49] = 0;
   out_2082170513073981530[50] = 0;
   out_2082170513073981530[51] = 0;
   out_2082170513073981530[52] = 0;
   out_2082170513073981530[53] = 0;
   out_2082170513073981530[54] = 0;
   out_2082170513073981530[55] = 0;
   out_2082170513073981530[56] = 0;
   out_2082170513073981530[57] = 0;
   out_2082170513073981530[58] = 1;
   out_2082170513073981530[59] = 0;
   out_2082170513073981530[60] = 0;
   out_2082170513073981530[61] = 1;
   out_2082170513073981530[62] = 0;
   out_2082170513073981530[63] = 0;
   out_2082170513073981530[64] = 0;
   out_2082170513073981530[65] = 0;
   out_2082170513073981530[66] = 0;
   out_2082170513073981530[67] = 0;
   out_2082170513073981530[68] = 0;
}
void h_9(double *state, double *unused, double *out_3356817634526894403) {
   out_3356817634526894403[0] = state[10];
   out_3356817634526894403[1] = state[11];
   out_3356817634526894403[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6996038728129857291) {
   out_6996038728129857291[0] = 0;
   out_6996038728129857291[1] = 0;
   out_6996038728129857291[2] = 0;
   out_6996038728129857291[3] = 0;
   out_6996038728129857291[4] = 0;
   out_6996038728129857291[5] = 0;
   out_6996038728129857291[6] = 0;
   out_6996038728129857291[7] = 0;
   out_6996038728129857291[8] = 0;
   out_6996038728129857291[9] = 0;
   out_6996038728129857291[10] = 1;
   out_6996038728129857291[11] = 0;
   out_6996038728129857291[12] = 0;
   out_6996038728129857291[13] = 0;
   out_6996038728129857291[14] = 0;
   out_6996038728129857291[15] = 0;
   out_6996038728129857291[16] = 0;
   out_6996038728129857291[17] = 0;
   out_6996038728129857291[18] = 0;
   out_6996038728129857291[19] = 0;
   out_6996038728129857291[20] = 0;
   out_6996038728129857291[21] = 0;
   out_6996038728129857291[22] = 0;
   out_6996038728129857291[23] = 0;
   out_6996038728129857291[24] = 0;
   out_6996038728129857291[25] = 0;
   out_6996038728129857291[26] = 0;
   out_6996038728129857291[27] = 0;
   out_6996038728129857291[28] = 0;
   out_6996038728129857291[29] = 0;
   out_6996038728129857291[30] = 0;
   out_6996038728129857291[31] = 0;
   out_6996038728129857291[32] = 0;
   out_6996038728129857291[33] = 0;
   out_6996038728129857291[34] = 1;
   out_6996038728129857291[35] = 0;
   out_6996038728129857291[36] = 0;
   out_6996038728129857291[37] = 0;
   out_6996038728129857291[38] = 0;
   out_6996038728129857291[39] = 0;
   out_6996038728129857291[40] = 0;
   out_6996038728129857291[41] = 0;
   out_6996038728129857291[42] = 0;
   out_6996038728129857291[43] = 0;
   out_6996038728129857291[44] = 0;
   out_6996038728129857291[45] = 0;
   out_6996038728129857291[46] = 0;
   out_6996038728129857291[47] = 0;
   out_6996038728129857291[48] = 0;
   out_6996038728129857291[49] = 0;
   out_6996038728129857291[50] = 0;
   out_6996038728129857291[51] = 0;
   out_6996038728129857291[52] = 0;
   out_6996038728129857291[53] = 0;
   out_6996038728129857291[54] = 0;
   out_6996038728129857291[55] = 0;
   out_6996038728129857291[56] = 0;
   out_6996038728129857291[57] = 0;
   out_6996038728129857291[58] = 1;
   out_6996038728129857291[59] = 0;
   out_6996038728129857291[60] = 0;
   out_6996038728129857291[61] = 0;
   out_6996038728129857291[62] = 0;
   out_6996038728129857291[63] = 0;
   out_6996038728129857291[64] = 0;
   out_6996038728129857291[65] = 0;
   out_6996038728129857291[66] = 0;
   out_6996038728129857291[67] = 0;
   out_6996038728129857291[68] = 0;
}
void h_10(double *state, double *unused, double *out_4018377394709224055) {
   out_4018377394709224055[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[17];
   out_4018377394709224055[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[18];
   out_4018377394709224055[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[19];
}
void H_10(double *state, double *unused, double *out_1027932559565730950) {
   out_1027932559565730950[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1027932559565730950[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1027932559565730950[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1027932559565730950[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1027932559565730950[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1027932559565730950[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1027932559565730950[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1027932559565730950[7] = 0;
   out_1027932559565730950[8] = 0;
   out_1027932559565730950[9] = 0;
   out_1027932559565730950[10] = 0;
   out_1027932559565730950[11] = 0;
   out_1027932559565730950[12] = 0;
   out_1027932559565730950[13] = 0;
   out_1027932559565730950[14] = 0;
   out_1027932559565730950[15] = 0;
   out_1027932559565730950[16] = 0;
   out_1027932559565730950[17] = 1;
   out_1027932559565730950[18] = 0;
   out_1027932559565730950[19] = 0;
   out_1027932559565730950[20] = 0;
   out_1027932559565730950[21] = 0;
   out_1027932559565730950[22] = 0;
   out_1027932559565730950[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1027932559565730950[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1027932559565730950[25] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1027932559565730950[26] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1027932559565730950[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1027932559565730950[28] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1027932559565730950[29] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1027932559565730950[30] = 0;
   out_1027932559565730950[31] = 0;
   out_1027932559565730950[32] = 0;
   out_1027932559565730950[33] = 0;
   out_1027932559565730950[34] = 0;
   out_1027932559565730950[35] = 0;
   out_1027932559565730950[36] = 0;
   out_1027932559565730950[37] = 0;
   out_1027932559565730950[38] = 0;
   out_1027932559565730950[39] = 0;
   out_1027932559565730950[40] = 0;
   out_1027932559565730950[41] = 1;
   out_1027932559565730950[42] = 0;
   out_1027932559565730950[43] = 0;
   out_1027932559565730950[44] = 0;
   out_1027932559565730950[45] = 0;
   out_1027932559565730950[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1027932559565730950[47] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1027932559565730950[48] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1027932559565730950[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1027932559565730950[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1027932559565730950[51] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1027932559565730950[52] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1027932559565730950[53] = 0;
   out_1027932559565730950[54] = 0;
   out_1027932559565730950[55] = 0;
   out_1027932559565730950[56] = 0;
   out_1027932559565730950[57] = 0;
   out_1027932559565730950[58] = 0;
   out_1027932559565730950[59] = 0;
   out_1027932559565730950[60] = 0;
   out_1027932559565730950[61] = 0;
   out_1027932559565730950[62] = 0;
   out_1027932559565730950[63] = 0;
   out_1027932559565730950[64] = 0;
   out_1027932559565730950[65] = 1;
   out_1027932559565730950[66] = 0;
   out_1027932559565730950[67] = 0;
   out_1027932559565730950[68] = 0;
}
void h_12(double *state, double *unused, double *out_7025509156379546761) {
   out_7025509156379546761[0] = state[0];
   out_7025509156379546761[1] = state[1];
   out_7025509156379546761[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4188726024813191099) {
   out_4188726024813191099[0] = 1;
   out_4188726024813191099[1] = 0;
   out_4188726024813191099[2] = 0;
   out_4188726024813191099[3] = 0;
   out_4188726024813191099[4] = 0;
   out_4188726024813191099[5] = 0;
   out_4188726024813191099[6] = 0;
   out_4188726024813191099[7] = 0;
   out_4188726024813191099[8] = 0;
   out_4188726024813191099[9] = 0;
   out_4188726024813191099[10] = 0;
   out_4188726024813191099[11] = 0;
   out_4188726024813191099[12] = 0;
   out_4188726024813191099[13] = 0;
   out_4188726024813191099[14] = 0;
   out_4188726024813191099[15] = 0;
   out_4188726024813191099[16] = 0;
   out_4188726024813191099[17] = 0;
   out_4188726024813191099[18] = 0;
   out_4188726024813191099[19] = 0;
   out_4188726024813191099[20] = 0;
   out_4188726024813191099[21] = 0;
   out_4188726024813191099[22] = 0;
   out_4188726024813191099[23] = 0;
   out_4188726024813191099[24] = 1;
   out_4188726024813191099[25] = 0;
   out_4188726024813191099[26] = 0;
   out_4188726024813191099[27] = 0;
   out_4188726024813191099[28] = 0;
   out_4188726024813191099[29] = 0;
   out_4188726024813191099[30] = 0;
   out_4188726024813191099[31] = 0;
   out_4188726024813191099[32] = 0;
   out_4188726024813191099[33] = 0;
   out_4188726024813191099[34] = 0;
   out_4188726024813191099[35] = 0;
   out_4188726024813191099[36] = 0;
   out_4188726024813191099[37] = 0;
   out_4188726024813191099[38] = 0;
   out_4188726024813191099[39] = 0;
   out_4188726024813191099[40] = 0;
   out_4188726024813191099[41] = 0;
   out_4188726024813191099[42] = 0;
   out_4188726024813191099[43] = 0;
   out_4188726024813191099[44] = 0;
   out_4188726024813191099[45] = 0;
   out_4188726024813191099[46] = 0;
   out_4188726024813191099[47] = 0;
   out_4188726024813191099[48] = 1;
   out_4188726024813191099[49] = 0;
   out_4188726024813191099[50] = 0;
   out_4188726024813191099[51] = 0;
   out_4188726024813191099[52] = 0;
   out_4188726024813191099[53] = 0;
   out_4188726024813191099[54] = 0;
   out_4188726024813191099[55] = 0;
   out_4188726024813191099[56] = 0;
   out_4188726024813191099[57] = 0;
   out_4188726024813191099[58] = 0;
   out_4188726024813191099[59] = 0;
   out_4188726024813191099[60] = 0;
   out_4188726024813191099[61] = 0;
   out_4188726024813191099[62] = 0;
   out_4188726024813191099[63] = 0;
   out_4188726024813191099[64] = 0;
   out_4188726024813191099[65] = 0;
   out_4188726024813191099[66] = 0;
   out_4188726024813191099[67] = 0;
   out_4188726024813191099[68] = 0;
}
void h_31(double *state, double *unused, double *out_6589023536365609729) {
   out_6589023536365609729[0] = state[7];
   out_6589023536365609729[1] = state[8];
   out_6589023536365609729[2] = state[9];
}
void H_31(double *state, double *unused, double *out_1513636249669771278) {
   out_1513636249669771278[0] = 0;
   out_1513636249669771278[1] = 0;
   out_1513636249669771278[2] = 0;
   out_1513636249669771278[3] = 0;
   out_1513636249669771278[4] = 0;
   out_1513636249669771278[5] = 0;
   out_1513636249669771278[6] = 0;
   out_1513636249669771278[7] = 1;
   out_1513636249669771278[8] = 0;
   out_1513636249669771278[9] = 0;
   out_1513636249669771278[10] = 0;
   out_1513636249669771278[11] = 0;
   out_1513636249669771278[12] = 0;
   out_1513636249669771278[13] = 0;
   out_1513636249669771278[14] = 0;
   out_1513636249669771278[15] = 0;
   out_1513636249669771278[16] = 0;
   out_1513636249669771278[17] = 0;
   out_1513636249669771278[18] = 0;
   out_1513636249669771278[19] = 0;
   out_1513636249669771278[20] = 0;
   out_1513636249669771278[21] = 0;
   out_1513636249669771278[22] = 0;
   out_1513636249669771278[23] = 0;
   out_1513636249669771278[24] = 0;
   out_1513636249669771278[25] = 0;
   out_1513636249669771278[26] = 0;
   out_1513636249669771278[27] = 0;
   out_1513636249669771278[28] = 0;
   out_1513636249669771278[29] = 0;
   out_1513636249669771278[30] = 0;
   out_1513636249669771278[31] = 1;
   out_1513636249669771278[32] = 0;
   out_1513636249669771278[33] = 0;
   out_1513636249669771278[34] = 0;
   out_1513636249669771278[35] = 0;
   out_1513636249669771278[36] = 0;
   out_1513636249669771278[37] = 0;
   out_1513636249669771278[38] = 0;
   out_1513636249669771278[39] = 0;
   out_1513636249669771278[40] = 0;
   out_1513636249669771278[41] = 0;
   out_1513636249669771278[42] = 0;
   out_1513636249669771278[43] = 0;
   out_1513636249669771278[44] = 0;
   out_1513636249669771278[45] = 0;
   out_1513636249669771278[46] = 0;
   out_1513636249669771278[47] = 0;
   out_1513636249669771278[48] = 0;
   out_1513636249669771278[49] = 0;
   out_1513636249669771278[50] = 0;
   out_1513636249669771278[51] = 0;
   out_1513636249669771278[52] = 0;
   out_1513636249669771278[53] = 0;
   out_1513636249669771278[54] = 0;
   out_1513636249669771278[55] = 1;
   out_1513636249669771278[56] = 0;
   out_1513636249669771278[57] = 0;
   out_1513636249669771278[58] = 0;
   out_1513636249669771278[59] = 0;
   out_1513636249669771278[60] = 0;
   out_1513636249669771278[61] = 0;
   out_1513636249669771278[62] = 0;
   out_1513636249669771278[63] = 0;
   out_1513636249669771278[64] = 0;
   out_1513636249669771278[65] = 0;
   out_1513636249669771278[66] = 0;
   out_1513636249669771278[67] = 0;
   out_1513636249669771278[68] = 0;
}
void h_32(double *state, double *unused, double *out_5567556164815529359) {
   out_5567556164815529359[0] = state[3];
   out_5567556164815529359[1] = state[4];
   out_5567556164815529359[2] = state[5];
   out_5567556164815529359[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1769083286801434943) {
   out_1769083286801434943[0] = 0;
   out_1769083286801434943[1] = 0;
   out_1769083286801434943[2] = 0;
   out_1769083286801434943[3] = 1;
   out_1769083286801434943[4] = 0;
   out_1769083286801434943[5] = 0;
   out_1769083286801434943[6] = 0;
   out_1769083286801434943[7] = 0;
   out_1769083286801434943[8] = 0;
   out_1769083286801434943[9] = 0;
   out_1769083286801434943[10] = 0;
   out_1769083286801434943[11] = 0;
   out_1769083286801434943[12] = 0;
   out_1769083286801434943[13] = 0;
   out_1769083286801434943[14] = 0;
   out_1769083286801434943[15] = 0;
   out_1769083286801434943[16] = 0;
   out_1769083286801434943[17] = 0;
   out_1769083286801434943[18] = 0;
   out_1769083286801434943[19] = 0;
   out_1769083286801434943[20] = 0;
   out_1769083286801434943[21] = 0;
   out_1769083286801434943[22] = 0;
   out_1769083286801434943[23] = 0;
   out_1769083286801434943[24] = 0;
   out_1769083286801434943[25] = 0;
   out_1769083286801434943[26] = 0;
   out_1769083286801434943[27] = 1;
   out_1769083286801434943[28] = 0;
   out_1769083286801434943[29] = 0;
   out_1769083286801434943[30] = 0;
   out_1769083286801434943[31] = 0;
   out_1769083286801434943[32] = 0;
   out_1769083286801434943[33] = 0;
   out_1769083286801434943[34] = 0;
   out_1769083286801434943[35] = 0;
   out_1769083286801434943[36] = 0;
   out_1769083286801434943[37] = 0;
   out_1769083286801434943[38] = 0;
   out_1769083286801434943[39] = 0;
   out_1769083286801434943[40] = 0;
   out_1769083286801434943[41] = 0;
   out_1769083286801434943[42] = 0;
   out_1769083286801434943[43] = 0;
   out_1769083286801434943[44] = 0;
   out_1769083286801434943[45] = 0;
   out_1769083286801434943[46] = 0;
   out_1769083286801434943[47] = 0;
   out_1769083286801434943[48] = 0;
   out_1769083286801434943[49] = 0;
   out_1769083286801434943[50] = 0;
   out_1769083286801434943[51] = 1;
   out_1769083286801434943[52] = 0;
   out_1769083286801434943[53] = 0;
   out_1769083286801434943[54] = 0;
   out_1769083286801434943[55] = 0;
   out_1769083286801434943[56] = 0;
   out_1769083286801434943[57] = 0;
   out_1769083286801434943[58] = 0;
   out_1769083286801434943[59] = 0;
   out_1769083286801434943[60] = 0;
   out_1769083286801434943[61] = 0;
   out_1769083286801434943[62] = 0;
   out_1769083286801434943[63] = 0;
   out_1769083286801434943[64] = 0;
   out_1769083286801434943[65] = 0;
   out_1769083286801434943[66] = 0;
   out_1769083286801434943[67] = 0;
   out_1769083286801434943[68] = 0;
   out_1769083286801434943[69] = 0;
   out_1769083286801434943[70] = 0;
   out_1769083286801434943[71] = 0;
   out_1769083286801434943[72] = 0;
   out_1769083286801434943[73] = 0;
   out_1769083286801434943[74] = 0;
   out_1769083286801434943[75] = 1;
   out_1769083286801434943[76] = 0;
   out_1769083286801434943[77] = 0;
   out_1769083286801434943[78] = 0;
   out_1769083286801434943[79] = 0;
   out_1769083286801434943[80] = 0;
   out_1769083286801434943[81] = 0;
   out_1769083286801434943[82] = 0;
   out_1769083286801434943[83] = 0;
   out_1769083286801434943[84] = 0;
   out_1769083286801434943[85] = 0;
   out_1769083286801434943[86] = 0;
   out_1769083286801434943[87] = 0;
   out_1769083286801434943[88] = 0;
   out_1769083286801434943[89] = 0;
   out_1769083286801434943[90] = 0;
   out_1769083286801434943[91] = 0;
}
void h_13(double *state, double *unused, double *out_1853642320553116850) {
   out_1853642320553116850[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1853642320553116850[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1853642320553116850[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6729170183730499664) {
   out_6729170183730499664[0] = 0;
   out_6729170183730499664[1] = 0;
   out_6729170183730499664[2] = 0;
   out_6729170183730499664[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6729170183730499664[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6729170183730499664[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6729170183730499664[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6729170183730499664[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6729170183730499664[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6729170183730499664[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6729170183730499664[10] = 0;
   out_6729170183730499664[11] = 0;
   out_6729170183730499664[12] = 0;
   out_6729170183730499664[13] = 0;
   out_6729170183730499664[14] = 0;
   out_6729170183730499664[15] = 0;
   out_6729170183730499664[16] = 0;
   out_6729170183730499664[17] = 0;
   out_6729170183730499664[18] = 0;
   out_6729170183730499664[19] = 0;
   out_6729170183730499664[20] = 0;
   out_6729170183730499664[21] = 0;
   out_6729170183730499664[22] = 0;
   out_6729170183730499664[23] = 0;
   out_6729170183730499664[24] = 0;
   out_6729170183730499664[25] = 0;
   out_6729170183730499664[26] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6729170183730499664[27] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6729170183730499664[28] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6729170183730499664[29] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6729170183730499664[30] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6729170183730499664[31] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6729170183730499664[32] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6729170183730499664[33] = 0;
   out_6729170183730499664[34] = 0;
   out_6729170183730499664[35] = 0;
   out_6729170183730499664[36] = 0;
   out_6729170183730499664[37] = 0;
   out_6729170183730499664[38] = 0;
   out_6729170183730499664[39] = 0;
   out_6729170183730499664[40] = 0;
   out_6729170183730499664[41] = 0;
   out_6729170183730499664[42] = 0;
   out_6729170183730499664[43] = 0;
   out_6729170183730499664[44] = 0;
   out_6729170183730499664[45] = 0;
   out_6729170183730499664[46] = 0;
   out_6729170183730499664[47] = 0;
   out_6729170183730499664[48] = 0;
   out_6729170183730499664[49] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6729170183730499664[50] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6729170183730499664[51] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6729170183730499664[52] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6729170183730499664[53] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6729170183730499664[54] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6729170183730499664[55] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6729170183730499664[56] = 0;
   out_6729170183730499664[57] = 0;
   out_6729170183730499664[58] = 0;
   out_6729170183730499664[59] = 0;
   out_6729170183730499664[60] = 0;
   out_6729170183730499664[61] = 0;
   out_6729170183730499664[62] = 0;
   out_6729170183730499664[63] = 0;
   out_6729170183730499664[64] = 0;
   out_6729170183730499664[65] = 0;
   out_6729170183730499664[66] = 0;
   out_6729170183730499664[67] = 0;
   out_6729170183730499664[68] = 0;
}
void h_14(double *state, double *unused, double *out_3356817634526894403) {
   out_3356817634526894403[0] = state[10];
   out_3356817634526894403[1] = state[11];
   out_3356817634526894403[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6996038728129857291) {
   out_6996038728129857291[0] = 0;
   out_6996038728129857291[1] = 0;
   out_6996038728129857291[2] = 0;
   out_6996038728129857291[3] = 0;
   out_6996038728129857291[4] = 0;
   out_6996038728129857291[5] = 0;
   out_6996038728129857291[6] = 0;
   out_6996038728129857291[7] = 0;
   out_6996038728129857291[8] = 0;
   out_6996038728129857291[9] = 0;
   out_6996038728129857291[10] = 1;
   out_6996038728129857291[11] = 0;
   out_6996038728129857291[12] = 0;
   out_6996038728129857291[13] = 0;
   out_6996038728129857291[14] = 0;
   out_6996038728129857291[15] = 0;
   out_6996038728129857291[16] = 0;
   out_6996038728129857291[17] = 0;
   out_6996038728129857291[18] = 0;
   out_6996038728129857291[19] = 0;
   out_6996038728129857291[20] = 0;
   out_6996038728129857291[21] = 0;
   out_6996038728129857291[22] = 0;
   out_6996038728129857291[23] = 0;
   out_6996038728129857291[24] = 0;
   out_6996038728129857291[25] = 0;
   out_6996038728129857291[26] = 0;
   out_6996038728129857291[27] = 0;
   out_6996038728129857291[28] = 0;
   out_6996038728129857291[29] = 0;
   out_6996038728129857291[30] = 0;
   out_6996038728129857291[31] = 0;
   out_6996038728129857291[32] = 0;
   out_6996038728129857291[33] = 0;
   out_6996038728129857291[34] = 1;
   out_6996038728129857291[35] = 0;
   out_6996038728129857291[36] = 0;
   out_6996038728129857291[37] = 0;
   out_6996038728129857291[38] = 0;
   out_6996038728129857291[39] = 0;
   out_6996038728129857291[40] = 0;
   out_6996038728129857291[41] = 0;
   out_6996038728129857291[42] = 0;
   out_6996038728129857291[43] = 0;
   out_6996038728129857291[44] = 0;
   out_6996038728129857291[45] = 0;
   out_6996038728129857291[46] = 0;
   out_6996038728129857291[47] = 0;
   out_6996038728129857291[48] = 0;
   out_6996038728129857291[49] = 0;
   out_6996038728129857291[50] = 0;
   out_6996038728129857291[51] = 0;
   out_6996038728129857291[52] = 0;
   out_6996038728129857291[53] = 0;
   out_6996038728129857291[54] = 0;
   out_6996038728129857291[55] = 0;
   out_6996038728129857291[56] = 0;
   out_6996038728129857291[57] = 0;
   out_6996038728129857291[58] = 1;
   out_6996038728129857291[59] = 0;
   out_6996038728129857291[60] = 0;
   out_6996038728129857291[61] = 0;
   out_6996038728129857291[62] = 0;
   out_6996038728129857291[63] = 0;
   out_6996038728129857291[64] = 0;
   out_6996038728129857291[65] = 0;
   out_6996038728129857291[66] = 0;
   out_6996038728129857291[67] = 0;
   out_6996038728129857291[68] = 0;
}
void h_19(double *state, double *unused, double *out_2201584990905246391) {
   out_2201584990905246391[0] = state[20];
   out_2201584990905246391[1] = state[21];
   out_2201584990905246391[2] = state[22];
}
void H_19(double *state, double *unused, double *out_2563358877027426110) {
   out_2563358877027426110[0] = 0;
   out_2563358877027426110[1] = 0;
   out_2563358877027426110[2] = 0;
   out_2563358877027426110[3] = 0;
   out_2563358877027426110[4] = 0;
   out_2563358877027426110[5] = 0;
   out_2563358877027426110[6] = 0;
   out_2563358877027426110[7] = 0;
   out_2563358877027426110[8] = 0;
   out_2563358877027426110[9] = 0;
   out_2563358877027426110[10] = 0;
   out_2563358877027426110[11] = 0;
   out_2563358877027426110[12] = 0;
   out_2563358877027426110[13] = 0;
   out_2563358877027426110[14] = 0;
   out_2563358877027426110[15] = 0;
   out_2563358877027426110[16] = 0;
   out_2563358877027426110[17] = 0;
   out_2563358877027426110[18] = 0;
   out_2563358877027426110[19] = 0;
   out_2563358877027426110[20] = 1;
   out_2563358877027426110[21] = 0;
   out_2563358877027426110[22] = 0;
   out_2563358877027426110[23] = 0;
   out_2563358877027426110[24] = 0;
   out_2563358877027426110[25] = 0;
   out_2563358877027426110[26] = 0;
   out_2563358877027426110[27] = 0;
   out_2563358877027426110[28] = 0;
   out_2563358877027426110[29] = 0;
   out_2563358877027426110[30] = 0;
   out_2563358877027426110[31] = 0;
   out_2563358877027426110[32] = 0;
   out_2563358877027426110[33] = 0;
   out_2563358877027426110[34] = 0;
   out_2563358877027426110[35] = 0;
   out_2563358877027426110[36] = 0;
   out_2563358877027426110[37] = 0;
   out_2563358877027426110[38] = 0;
   out_2563358877027426110[39] = 0;
   out_2563358877027426110[40] = 0;
   out_2563358877027426110[41] = 0;
   out_2563358877027426110[42] = 0;
   out_2563358877027426110[43] = 0;
   out_2563358877027426110[44] = 1;
   out_2563358877027426110[45] = 0;
   out_2563358877027426110[46] = 0;
   out_2563358877027426110[47] = 0;
   out_2563358877027426110[48] = 0;
   out_2563358877027426110[49] = 0;
   out_2563358877027426110[50] = 0;
   out_2563358877027426110[51] = 0;
   out_2563358877027426110[52] = 0;
   out_2563358877027426110[53] = 0;
   out_2563358877027426110[54] = 0;
   out_2563358877027426110[55] = 0;
   out_2563358877027426110[56] = 0;
   out_2563358877027426110[57] = 0;
   out_2563358877027426110[58] = 0;
   out_2563358877027426110[59] = 0;
   out_2563358877027426110[60] = 0;
   out_2563358877027426110[61] = 0;
   out_2563358877027426110[62] = 0;
   out_2563358877027426110[63] = 0;
   out_2563358877027426110[64] = 0;
   out_2563358877027426110[65] = 0;
   out_2563358877027426110[66] = 0;
   out_2563358877027426110[67] = 0;
   out_2563358877027426110[68] = 1;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_3(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<1, 3, 0>(in_x, in_P, h_3, H_3, NULL, in_z, in_R, in_ea, MAHA_THRESH_3);
}
void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_19(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_19, H_19, NULL, in_z, in_R, in_ea, MAHA_THRESH_19);
}
void live_H(double *in_vec, double *out_2171810797954634884) {
  H(in_vec, out_2171810797954634884);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8542546535441190970) {
  err_fun(nom_x, delta_x, out_8542546535441190970);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8399843449917516150) {
  inv_err_fun(nom_x, true_x, out_8399843449917516150);
}
void live_H_mod_fun(double *state, double *out_8891062055483122034) {
  H_mod_fun(state, out_8891062055483122034);
}
void live_f_fun(double *state, double dt, double *out_2240038446206287964) {
  f_fun(state,  dt, out_2240038446206287964);
}
void live_F_fun(double *state, double dt, double *out_7703937601435102592) {
  F_fun(state,  dt, out_7703937601435102592);
}
void live_h_3(double *state, double *unused, double *out_7428854366516085539) {
  h_3(state, unused, out_7428854366516085539);
}
void live_H_3(double *state, double *unused, double *out_3256564296091412995) {
  H_3(state, unused, out_3256564296091412995);
}
void live_h_4(double *state, double *unused, double *out_8430018997242678260) {
  h_4(state, unused, out_8430018997242678260);
}
void live_H_4(double *state, double *unused, double *out_2082170513073981530) {
  H_4(state, unused, out_2082170513073981530);
}
void live_h_9(double *state, double *unused, double *out_3356817634526894403) {
  h_9(state, unused, out_3356817634526894403);
}
void live_H_9(double *state, double *unused, double *out_6996038728129857291) {
  H_9(state, unused, out_6996038728129857291);
}
void live_h_10(double *state, double *unused, double *out_4018377394709224055) {
  h_10(state, unused, out_4018377394709224055);
}
void live_H_10(double *state, double *unused, double *out_1027932559565730950) {
  H_10(state, unused, out_1027932559565730950);
}
void live_h_12(double *state, double *unused, double *out_7025509156379546761) {
  h_12(state, unused, out_7025509156379546761);
}
void live_H_12(double *state, double *unused, double *out_4188726024813191099) {
  H_12(state, unused, out_4188726024813191099);
}
void live_h_31(double *state, double *unused, double *out_6589023536365609729) {
  h_31(state, unused, out_6589023536365609729);
}
void live_H_31(double *state, double *unused, double *out_1513636249669771278) {
  H_31(state, unused, out_1513636249669771278);
}
void live_h_32(double *state, double *unused, double *out_5567556164815529359) {
  h_32(state, unused, out_5567556164815529359);
}
void live_H_32(double *state, double *unused, double *out_1769083286801434943) {
  H_32(state, unused, out_1769083286801434943);
}
void live_h_13(double *state, double *unused, double *out_1853642320553116850) {
  h_13(state, unused, out_1853642320553116850);
}
void live_H_13(double *state, double *unused, double *out_6729170183730499664) {
  H_13(state, unused, out_6729170183730499664);
}
void live_h_14(double *state, double *unused, double *out_3356817634526894403) {
  h_14(state, unused, out_3356817634526894403);
}
void live_H_14(double *state, double *unused, double *out_6996038728129857291) {
  H_14(state, unused, out_6996038728129857291);
}
void live_h_19(double *state, double *unused, double *out_2201584990905246391) {
  h_19(state, unused, out_2201584990905246391);
}
void live_H_19(double *state, double *unused, double *out_2563358877027426110) {
  H_19(state, unused, out_2563358877027426110);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 3, 4, 9, 10, 12, 31, 32, 13, 14, 19 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 3, live_h_3 },
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 19, live_h_19 },
  },
  .Hs = {
    { 3, live_H_3 },
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 19, live_H_19 },
  },
  .updates = {
    { 3, live_update_3 },
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 19, live_update_19 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
